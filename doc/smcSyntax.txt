//OneCoin
FSM: OneCoinTurnstile
Initial: Locked
{
  Locked	Coin	Unlocked	{alarmOff unlock}
  Locked 	Pass	Locked		alarmOn
  Unlocked	Coin	Unlocked	thankyou
  Unlocked	Pass	Locked		lock
}

//TwoCoin1
FSM: TwoCoinTurnstile
Initial: Locked
{
  Locked {
    Pass  Alarming   alarmOn
    Coin  FirstCoin  -
    Reset Locked     {lock alarmOff}
  }

  Alarming  Reset  Locked  {lock alarmOff}

  FirstCoin {
    Pass  Alarming  -
    Coin  Unlocked  unlock
    Reset Locked    {lock alarmOff}
  }

  Unlocked {
    Pass  Locked  lock
    Coin  -       thankyou
    Reset Locked  {lock alarmOff}
  }
}

//TwoCoin2
FSM: TwoCoinTurnstile
Initial: Locked
{
  (Base)  Reset  Locked  {alarmOff lock}

  Locked : Base {
    Pass  Alarming  alarmOn
    Coin  FirstCoin -
  }

  Alarming : Base  -  -  -

  FirstCoin : Base {
    Pass  Alarming  -
    Coin  Unlocked  unlock
  }

  Unlocked : Base {
    Pass  Locked  lock
    Coin  -       thankyou
  }
}

//TwoCoin3
FSM: TwoCoinTurnstile
Initial: Locked
{
  (Base)  Reset  Locked  lock

  Locked : Base {
    Pass  Alarming   -
    Coin  FirstCoin  -
  }

  Alarming : Base  >alarmOn <alarmOff {
    - - -
  }

  FirstCoin : Base {
    Pass  Alarming  -
    Coin  Unlocked  unlock
  }

  Unlocked : Base {
    Pass  Locked  lock
    Coin  -       thankyou
  }
}







// BNF - Backus-Naur Form

<FSM> ::= <header>* <logic>
<header> ::= <name> ":" <name>

<logic> ::= "{" <transition>* "}"
<transition> ::= <state-spec> <subtransition>
	         |   <state-spec> "{" <subtransition>* "}"
<state-spec> ::= <state> <state-modifier>*
<state> ::= <name> | "(" <name> ")"
<state-modifier> ::= ":" <name>
	             |   "<" <name>
	             |   ">" <name>
<subtransition> ::= <event> <next-state> <action>
<action> ::= <name> | "{" <name>* "}" | "-"
<next-state> ::= <state> | "-"
<event> ::= <name> | "-"
